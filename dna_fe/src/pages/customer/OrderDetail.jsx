import React, { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import '../../styles/customer/OrderDetail.css';
import { useOrderDetail } from '../../hooks/useOrderDetail';

const OrderDetail = () => {
    const navigate = useNavigate();
    const { orderId } = useParams();
    const {
        order,
        service,
        customer,
        samples,
        registrationStaff,
        testingStaff,
        loading
    } = useOrderDetail(orderId);

    const formatDate = (dateStr) => dateStr ? new Date(dateStr).toLocaleDateString('vi-VN') : 'N/A';

    if (loading) return <div>ƒêang t·∫£i d·ªØ li·ªáu chi ti·∫øt ƒë∆°n h√†ng...</div>;
    if (!order) return <div>Kh√¥ng t√¨m th·∫•y ƒë∆°n h√†ng.</div>;


    return (
        <div className="order-detail-container">
            <h2>Chi ti·∫øt ƒë∆°n h√†ng #{orderId}</h2>

            <div className="order-section">
                <h3>Th√¥ng tin ƒë∆°n h√†ng</h3>
                <p><strong>Tr·∫°ng th√°i:</strong> {order.orderStatus}</p>
                <p><strong>Ng√†y ƒëƒÉng k√Ω:</strong> {formatDate(order.orderDate)}</p>
                <p><strong>H√¨nh th·ª©c thu m·∫´u:</strong> {order.sampleType === 'center' ? 'T·∫°i trung t√¢m' : 'T·ª± l·∫•y m·∫´u t·∫°i nh√†'}</p>
                <p><strong>M√£ kit:</strong> {order.kitCode || 'Kh√¥ng c√≥'}</p>
                <p><strong>H√¨nh th·ª©c nh·∫≠n k·∫øt qu·∫£:</strong> {order.resultDeliveryMethod}</p>
                <p><strong>ƒê·ªãa ch·ªâ nh·∫≠n k·∫øt qu·∫£:</strong> {order.resultDeliverAddress}</p>
                <p><strong>S·ªë l∆∞·ª£ng m·∫´u:</strong> {order.sampleQuantity}</p>
                <p><strong>T·ªïng ph√≠:</strong> {order.amount.toLocaleString('vi-VN')} VNƒê</p>
            </div>

            <div className="order-section">
                <h3>Th√¥ng tin d·ªãch v·ª•</h3>
                {service ? (
                    <>
                        <p><strong>T√™n d·ªãch v·ª•:</strong> {service.serviceName}</p>
                        <p><strong>M·ª•c ƒë√≠ch:</strong> {service.servicePurpose}</p>
                        <p><strong>M√¥ t·∫£:</strong> {service.describe}</p>
                        <p><strong>Th·ªùi gian tr·∫£ k·∫øt qu·∫£:</strong> {service.timeTest} ng√†y</p>
                    </>
                ) : (
                    <p>Kh√¥ng t√¨m th·∫•y d·ªãch v·ª•.</p>
                )}
            </div>

            <div className="order-section">
                <h3>Kh√°ch h√†ng</h3>
                {customer ? (
                    <>
                        <p><strong>T√™n kh√°ch h√†ng:</strong> {customer.fullName}</p>
                        <p><strong>Email:</strong> {customer.email}</p>
                        <p><strong>S·ªë ƒëi·ªán tho·∫°i:</strong> {customer.phone}</p>
                    </>
                ) : (
                    <p>Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng.</p>
                )}
            </div>

            <div className="order-section">
                <h3>Nh√¢n vi√™n x·ª≠ l√Ω</h3>
                <p><strong>Nh√¢n vi√™n ƒëƒÉng k√Ω:</strong> {registrationStaff ? registrationStaff.name : 'Kh√¥ng c√≥'}</p>
                <p><strong>Nh√¢n vi√™n x√©t nghi·ªám:</strong> {testingStaff ? testingStaff.name : 'Kh√¥ng c√≥'}</p>
            </div>

            <div className="order-section">
                <h3>Danh s√°ch m·∫´u x√©t nghi·ªám</h3>
                {samples.length > 0 ? (
                    samples.map((sample, index) => (
                        <div key={sample.id || index} className="sample-box">
                            <h4>üî¨ M·∫´u #{index + 1}</h4>
                            <p><strong>H·ªç t√™n:</strong> {sample.name}</p>
                            <p><strong>Ng√†y sinh:</strong> {formatDate(sample.dateOfBirth)}</p>
                            <p><strong>Gi·ªõi t√≠nh:</strong> {sample.gender}</p>
                            <p><strong>M·ªëi quan h·ªá:</strong> {sample.relationship}</p>
                            <p><strong>Lo·∫°i m·∫´u:</strong> {sample.sampleType}</p>

                            {/* ·∫®n n·∫øu m·ª•c ƒë√≠ch l√† D√¢n s·ª± */}
                            {service?.servicePurpose?.toLowerCase() !== 'd√¢n s·ª±' && (
                                <>
                                    <p><strong>Lo·∫°i gi·∫•y t·ªù:</strong> {sample.documentType}</p>
                                    <p><strong>S·ªë gi·∫•y t·ªù:</strong> {sample.documentNumber}</p>
                                    <p><strong>Ng√†y c·∫•p:</strong> {formatDate(sample.dateOfIssue)}</p>
                                    <p><strong>Ng√†y h·∫øt h·∫°n:</strong> {formatDate(sample.expirationDate)}</p>
                                    <p><strong>N∆°i c·∫•p:</strong> {sample.placeOfIssue}</p>
                                    <p><strong>Qu·ªëc t·ªãch:</strong> {sample.nationality}</p>
                                    <p><strong>ƒê·ªãa ch·ªâ:</strong> {sample.address}</p>
                                    <p><strong>S·ªë l∆∞·ª£ng m·∫´u:</strong> {sample.numberOfSample}</p>
                                    <p><strong>Ti·ªÅn s·ª≠ b·ªánh:</strong> {sample.medicalHistory}</p>
                                </>
                            )}
                        </div>
                    ))
                ) : (
                    <p>Ch∆∞a c√≥ m·∫´u x√©t nghi·ªám n√†o.</p>
                )}

            </div>
            <button className="back-button" onClick={() => navigate(-1)}>‚Üê Tr·ªü v·ªÅ</button>
        </div>
    );
};

export default OrderDetail;